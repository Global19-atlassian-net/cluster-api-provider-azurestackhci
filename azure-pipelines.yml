# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  GOPATH: '$(Agent.BuildDirectory)/gopath' # Go workspace path
  GOROOT: '$(Agent.BuildDirectory)/go' # Go installation path
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GO111MODULE: 'on'
  modulePath: '$(system.defaultWorkingDirectory)'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: '$(KNOWN_HOST)' 
    sshPublicKey: '$(SSH_PUBLIC_KEY)'
    sshKeySecureFile: 'azure-pipelines-ssh-key'
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: mocimages-connection
- task: GoTool@0
  inputs:
    version: '1.13.5'
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    mkdir -p '$(GOROOT)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    git config --global url.ssh://git@github.com/.insteadOf https://github.com/
    make IMG=mocimages.azurecr.io/caphcontroller:latest docker-build docker-push
    chmod +x hack/for-pipeline.sh
    hack/for-pipeline.sh
  workingDirectory: '$(modulePath)'
  displayName: 'Build'

- publish: $(modulePath)/bin
  artifact: binaries